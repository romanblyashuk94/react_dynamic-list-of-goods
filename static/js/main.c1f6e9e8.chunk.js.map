{"version":3,"sources":["api/goods.ts","GoodsList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","get5First","goods","sort","a","b","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","map","style","id","App","useState","setGoods","isInitialized","setIsInitialized","errorMessage","setErrorMessage","handleLoadClick","useCallback","fetchGoodsFunc","loadedGoods","message","className","type","onClick","length","ReactDOM","render","document","getElementById"],"mappings":"sOAKO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAI,GAAK,OAAIA,EACZC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SACtCE,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOb,IACJE,MAAK,SAAAI,GAAK,OAAIA,EAAMQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,a,eCZhCC,EAA6B,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMY,KAAI,SAAAH,GAAI,OACb,oBAEE,UAAQ,OACRI,MAAO,CAAEH,MAAOD,EAAKC,OAHvB,SAKGD,EAAKL,MAJDK,EAAKK,UCLLC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOhB,EAAP,KAAciB,EAAd,KACA,EAA0CD,oBAAS,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAAwCH,mBAAS,IAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KAEMC,EAAkBC,sBAAW,uCACjC,WAAOC,GAAP,eAAAtB,EAAA,sEAEImB,EAAgB,IAFpB,SAI8BG,IAJ9B,OAIUC,EAJV,OAMIR,EAASQ,GACTN,GAAiB,GAPrB,gDASIF,EAAS,IACTI,EAAgB,KAAMK,SAV1B,yDADiC,sDAcjC,IAGF,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,uDAEA,wBACEC,KAAK,SACLD,UAAU,SACV,UAAQ,aACRE,QAAS,kBAAMP,EAAgB5B,IAJjC,4BASA,wBACEkC,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMP,EAAgBvB,IAHjC,gCAQA,wBACE6B,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMP,EAAgBf,IAHjC,4BAQCa,GAAgB,4BAAIA,IAEpBpB,EAAM8B,OACH,cAAC,EAAD,CAAW9B,MAAOA,IAClBkB,GAAiB,yDC3D7Ba,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c1f6e9e8.chunk.js","sourcesContent":["import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5)); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red')); // get only red\n};\n","import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useCallback, useState } from 'react';\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleLoadClick = useCallback(\n    async (fetchGoodsFunc: () => Promise<Good[]>) => {\n      try {\n        setErrorMessage('');\n\n        const loadedGoods = await fetchGoodsFunc();\n\n        setGoods(loadedGoods);\n        setIsInitialized(true);\n      } catch (error) {\n        setGoods([]);\n        setErrorMessage(error.message);\n      }\n    },\n    [],\n  );\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__content\">\n        <h1>Dynamic list of Goods</h1>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          data-cy=\"all-button\"\n          onClick={() => handleLoadClick(getAll)}\n        >\n          Load all goods\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"first-five-button\"\n          onClick={() => handleLoadClick(get5First)}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"red-button\"\n          onClick={() => handleLoadClick(getRedGoods)}\n        >\n          Load red goods\n        </button>\n\n        {errorMessage && <p>{errorMessage}</p>}\n\n        {goods.length\n          ? <GoodsList goods={goods} />\n          : isInitialized && <p>There are no goods</p>}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}