{"version":3,"sources":["api/goods.ts","types/LoadedType.ts","components/GoodsList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","ms","x","Promise","resolve","setTimeout","response","json","LoadType","get5First","goods","sort","a","b","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","className","map","style","id","App","useState","setGoods","isInitialized","setIsInitialized","errorMessage","setErrorMessage","isLoading","setisLoading","NONE","loadedType","setLoadedType","handleLoadClick","useCallback","fetchGoodsFunc","loadType","loadedGoods","message","type","cn","ALL","onClick","FIVE","RED","length","src","alt","ReactDOM","render","document","getElementById"],"mappings":"mRAWO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAXYC,EAWC,IAVT,SAACC,GACN,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,YAAW,kBAAMD,EAAQF,KAAID,SAU1DD,MAAK,SAAAM,GAAQ,OAAIA,EAASC,UAZ/B,IAAiBN,EAeV,ICjBKO,EDiBCC,EAAY,WACvB,OAAOX,IACJE,MAAK,SAAAU,GAAK,OAAIA,EACZC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SACtCE,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOnB,IACJE,MAAK,SAAAU,GAAK,OAAIA,EAAMQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,a,qBElBhCC,EAA6B,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAH,OACxC,oBAAIY,UAAU,YAAd,SACGZ,EAAMa,KAAI,SAAAJ,GAAI,OACb,oBAEE,UAAQ,OACRG,UAAU,kBACVE,MAAO,CAAEJ,MAAOD,EAAKC,OAJvB,SAMGD,EAAKL,MALDK,EAAKM,W,SDZNjB,O,eAAAA,I,aAAAA,I,eAAAA,I,cAAAA,M,KEUL,IAAMkB,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOjB,EAAP,KAAckB,EAAd,KACA,EAA0CD,oBAAS,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAAwCH,mBAAS,IAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAAoCP,mBAASnB,EAAS2B,MAAtD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAkBC,sBAAW,uCACjC,WAAOC,EAAuCC,GAA9C,eAAA7B,EAAA,6DACEkB,GAAiB,GACjBF,EAAS,IACTM,GAAa,GACbF,EAAgB,IAJlB,kBAO8BQ,IAP9B,OAOUE,EAPV,OASId,EAASc,GACTZ,GAAiB,GACjBO,EAAcI,GAXlB,kDAaIb,EAAS,IACTS,EAAc7B,EAAS2B,MACvBH,EAAgB,KAAMW,SAf1B,yBAiBIT,GAAa,GAjBjB,6EADiC,wDAqBjC,IAGF,OACE,qBAAKZ,UAAU,MAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,QAAd,mCAEA,sBAAKA,UAAU,mBAAf,UACE,wBACEsB,KAAK,SACLtB,UAAWuB,IACT,SACA,aACA,CAAE,cAAeT,IAAe5B,EAASsC,MAE3C,UAAQ,aACRC,QAAS,kBAAMT,EAAgBxC,EAAQU,EAASsC,MARlD,4BAYA,wBACEF,KAAK,SACLtB,UAAWuB,IACT,SACA,aACA,CAAE,cAAeT,IAAe5B,EAASwC,OAE3C,UAAQ,oBACRD,QAAS,kBAAMT,EAAgB7B,EAAWD,EAASwC,OARrD,gCAYA,wBACEJ,KAAK,SACLtB,UAAWuB,IACT,SACA,aACA,CAAE,cAAeT,IAAe5B,EAASyC,MAE3C,UAAQ,aACRF,QAAS,kBAAMT,EAAgBrB,EAAaT,EAASyC,MARvD,+BAcDlB,GAAgB,mBAAGT,UAAU,kBAAb,SAAgCS,IAEhDrB,EAAMwC,OACH,cAAC,EAAD,CAAWxC,MAAOA,IAClBmB,GACA,mBAAGP,UAAU,kBAAb,gCAGHW,GACC,qBAEEkB,IAAI,sFACJC,IAAI,WC9FhBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d24c143a.chunk.js","sourcesContent":["import { Good } from '../types/Good';\n\nfunction sleeper(ms:number) {\n  return (x: Response): Promise<Response> => {\n    return new Promise(resolve => setTimeout(() => resolve(x), ms));\n  };\n}\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(sleeper(500))\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5)); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red')); // get only red\n};\n","export enum LoadType {\n  NONE,\n  ALL,\n  FIVE,\n  RED,\n}\n","import React from 'react';\nimport { Good } from '../types/Good';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"GoodsList\">\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className=\"GoodsList__item\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useCallback, useState } from 'react';\nimport 'bulma';\nimport cn from 'classnames';\n\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\nimport { Good } from './types/Good';\nimport { LoadType } from './types/LoadedType';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setisLoading] = useState(false);\n  const [loadedType, setLoadedType] = useState(LoadType.NONE);\n\n  const handleLoadClick = useCallback(\n    async (fetchGoodsFunc: () => Promise<Good[]>, loadType) => {\n      setIsInitialized(false);\n      setGoods([]);\n      setisLoading(true);\n      setErrorMessage('');\n\n      try {\n        const loadedGoods = await fetchGoodsFunc();\n\n        setGoods(loadedGoods);\n        setIsInitialized(true);\n        setLoadedType(loadType);\n      } catch (error) {\n        setGoods([]);\n        setLoadedType(LoadType.NONE);\n        setErrorMessage(error.message);\n      } finally {\n        setisLoading(false);\n      }\n    },\n    [],\n  );\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__content box\">\n        <h1 className=\"title\">Dynamic list of Goods</h1>\n\n        <div className=\"App__loadButtons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-primary',\n              { 'is-outlined': loadedType !== LoadType.ALL },\n            )}\n            data-cy=\"all-button\"\n            onClick={() => handleLoadClick(getAll, LoadType.ALL)}\n          >\n            Load all goods\n          </button>\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-primary',\n              { 'is-outlined': loadedType !== LoadType.FIVE },\n            )}\n            data-cy=\"first-five-button\"\n            onClick={() => handleLoadClick(get5First, LoadType.FIVE)}\n          >\n            Load 5 first goods\n          </button>\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-primary',\n              { 'is-outlined': loadedType !== LoadType.RED },\n            )}\n            data-cy=\"red-button\"\n            onClick={() => handleLoadClick(getRedGoods, LoadType.RED)}\n          >\n            Load red goods\n          </button>\n        </div>\n\n        {errorMessage && <p className=\"has-text-danger\">{errorMessage}</p>}\n\n        {goods.length\n          ? <GoodsList goods={goods} />\n          : isInitialized && (\n            <p className=\"has-text-danger\">There are no goods</p>\n          )}\n\n        {isLoading && (\n          <img\n          // eslint-disable-next-line max-len\n            src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif?20151024034921\"\n            alt=\"\"\n          />\n        )}\n\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}